{"version":3,"sources":["/home/snapbase/developments/products/Mefy-Doctor-WebApp/~/ngx-filter-pipe/dist/index.js","/home/snapbase/developments/products/Mefy-Doctor-WebApp/~/ngx-filter-pipe/dist/src/ngx-filter.module.js","/home/snapbase/developments/products/Mefy-Doctor-WebApp/~/ngx-filter-pipe/dist/src/ngx-filter.pipe.js"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;ACVA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK;AACL;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA,6C;;;;;;;;ACrBA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,YAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK;AACL;AACA;AACA,aAAa,IAAI;AACjB,KAAK,0BAA0B;AAC/B;AACA;AACA,yCAAyC,WAAW;AACpD;AACA,2C","file":"0.chunk.js","sourcesContent":["\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Created by vadimdez on 28/11/2016.\n */\n__export(require(\"./src/ngx-filter.module\"));\n__export(require(\"./src/ngx-filter.pipe\"));\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/snapbase/developments/products/Mefy-Doctor-WebApp/~/ngx-filter-pipe/dist/index.js\n// module id = ../../../../ngx-filter-pipe/dist/index.js\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Created by vadimdez on 28/11/2016.\n */\nvar core_1 = require(\"@angular/core\");\nvar ngx_filter_pipe_1 = require(\"./ngx-filter.pipe\");\nvar FilterPipeModule = (function () {\n    function FilterPipeModule() {\n    }\n    return FilterPipeModule;\n}());\nFilterPipeModule.decorators = [\n    { type: core_1.NgModule, args: [{\n                declarations: [ngx_filter_pipe_1.FilterPipe],\n                exports: [ngx_filter_pipe_1.FilterPipe]\n            },] },\n];\n/** @nocollapse */\nFilterPipeModule.ctorParameters = function () { return []; };\nexports.FilterPipeModule = FilterPipeModule;\n//# sourceMappingURL=ngx-filter.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/snapbase/developments/products/Mefy-Doctor-WebApp/~/ngx-filter-pipe/dist/src/ngx-filter.module.js\n// module id = ../../../../ngx-filter-pipe/dist/src/ngx-filter.module.js\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Created by vadimdez on 28/06/16.\n */\nvar core_1 = require(\"@angular/core\");\nvar FilterPipe = (function () {\n    function FilterPipe() {\n    }\n    FilterPipe.prototype.filterByString = function (filter) {\n        if (filter) {\n            filter = filter.toLowerCase();\n        }\n        return function (value) {\n            return !filter || (value ? ('' + value).toLowerCase().indexOf(filter) !== -1 : false);\n        };\n    };\n    FilterPipe.prototype.filterByBoolean = function (filter) {\n        return function (value) {\n            return Boolean(value) === filter;\n        };\n    };\n    FilterPipe.prototype.filterByObject = function (filter) {\n        var _this = this;\n        return function (value) {\n            for (var key in filter) {\n                if (key === '$or') {\n                    if (!_this.filterByOr(filter.$or)(_this.getValue(value))) {\n                        return false;\n                    }\n                    continue;\n                }\n                var walker = value;\n                var found = false;\n                do {\n                    if (walker.hasOwnProperty(key) || Object.getOwnPropertyDescriptor(walker, key)) {\n                        found = true;\n                        break;\n                    }\n                } while (walker = Object.getPrototypeOf(walker));\n                if (!found) {\n                    return false;\n                }\n                var val = _this.getValue(value[key]);\n                var filterType = typeof filter[key];\n                var isMatching = void 0;\n                if (filterType === 'boolean') {\n                    isMatching = _this.filterByBoolean(filter[key])(val);\n                }\n                else if (filterType === 'string') {\n                    isMatching = _this.filterByString(filter[key])(val);\n                }\n                else if (filterType === 'object') {\n                    isMatching = _this.filterByObject(filter[key])(val);\n                }\n                else {\n                    isMatching = _this.filterDefault(filter[key])(val);\n                }\n                if (!isMatching) {\n                    return false;\n                }\n            }\n            return true;\n        };\n    };\n    /**\n     * Filter value by $or\n     *\n     * @param filter\n     * @returns {(value:any)=>boolean}\n     */\n    FilterPipe.prototype.filterByOr = function (filter) {\n        return function (value) {\n            var hasMatch = false;\n            var length = filter.length;\n            var arrayComparison = function (i) {\n                return value.indexOf(filter[i]) !== -1;\n            };\n            var otherComparison = function (i) {\n                return value === filter[i];\n            };\n            var comparison = Array.isArray(value) ? arrayComparison : otherComparison;\n            for (var i = 0; i < length; i++) {\n                if (comparison(i)) {\n                    hasMatch = true;\n                    break;\n                }\n            }\n            return hasMatch;\n        };\n    };\n    /**\n     * Checks function's value if type is function otherwise same value\n     * @param value\n     * @returns {any}\n     */\n    FilterPipe.prototype.getValue = function (value) {\n        return typeof value === 'function' ? value() : value;\n    };\n    /**\n     * Defatul filterDefault function\n     *\n     * @param filter\n     * @returns {(value:any)=>boolean}\n     */\n    FilterPipe.prototype.filterDefault = function (filter) {\n        return function (value) {\n            return filter === undefined || filter == value;\n        };\n    };\n    FilterPipe.prototype.isNumber = function (value) {\n        return !isNaN(parseInt(value, 10)) && isFinite(value);\n    };\n    FilterPipe.prototype.transform = function (array, filter) {\n        var type = typeof filter;\n        if (!array) {\n            return array;\n        }\n        if (type === 'boolean') {\n            return array.filter(this.filterByBoolean(filter));\n        }\n        if (type === 'string') {\n            if (this.isNumber(filter)) {\n                return array.filter(this.filterDefault(filter));\n            }\n            return array.filter(this.filterByString(filter));\n        }\n        if (type === 'object') {\n            return array.filter(this.filterByObject(filter));\n        }\n        if (type === 'function') {\n            return array.filter(filter);\n        }\n        return array.filter(this.filterDefault(filter));\n    };\n    return FilterPipe;\n}());\nFilterPipe.decorators = [\n    { type: core_1.Pipe, args: [{\n                name: 'filterBy',\n                pure: false\n            },] },\n    { type: core_1.Injectable },\n];\n/** @nocollapse */\nFilterPipe.ctorParameters = function () { return []; };\nexports.FilterPipe = FilterPipe;\n//# sourceMappingURL=ngx-filter.pipe.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/snapbase/developments/products/Mefy-Doctor-WebApp/~/ngx-filter-pipe/dist/src/ngx-filter.pipe.js\n// module id = ../../../../ngx-filter-pipe/dist/src/ngx-filter.pipe.js\n// module chunks = 0"],"sourceRoot":"webpack:///"}